style_guide.txt

As the saying goes, "Standards are wonderful.  There are so many of them you can pick the one you like."  
More so than with most languages, there doesn't seem to be much consensus on what's appropriate for C.
In general, there's a preference for lower case with underscores (snake style) to camelcase.  

The code base for dss is all over the map.   

Here's what I'm trying to converge on: 

local variable names: 
snake case

when p prefixes a variable name to indicate a pointer, there is no underscore following the "p", 
e.g. pdate_time, not p_date_time

exception: 
conformance with included libraries: 
e.g. iAdapterIndex for ADL adapter number


typedefs
camel case with leading upper case letter AND underscores

When acronyms (e.g. "ADL") are used in a camel case context, only the leading letter is capitalized. 
e.g. typedef ... AdlRef;

// NO: using underscores implies using fully capitalized acronym, 
.e.g ADL_Display_Ref, not Adl_Display_Ref


When types are referenced in function and variable names, camelcase is converted to snake.
e.g. get_adl_ref_for_display() 

function names: 
snake 

macro names
defined values
All upper case with underscores

constant variables:
camel case with leading upper case letter with underscore

exceptions: 
values in included files, 
e.g. false in stdbool.h


enum values: upper case with underscore