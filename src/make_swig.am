# Adapted from code by tschoonj

if ENABLE_PYTHON

# libddcutil_la_SOURCES +=  \
# swig/ddc_swig.c
 

# Python extension module, installed in $(pyexecdir)
pyexec_LTLIBRARIES = _ddc_swig.la

# flags when compiling files in _ddc_swig_la_SOURCES
_ddc_swig_la_CFLAGS = $(PYTHON_CFLAGS) -I$(top_srcdir)/include $(PYTHON_CPPFLAGS)

_ddc_swig_la_SOURCES =  \
swig/ddc_swig.c

# Link in the core library
_ddc_swig_la_LIBADD = \
  libddcutil.la
  
# The source code for the extension module, nodist because this file will be generated by swig
nodist__ddc_swig_la_SOURCES    = swig/ddc_swig_wrap.c

# Global and order-independent shared library and program linkter config flags and options 
# -module          forces libtool to generate a dynamically loadable module
# -static          do not link against shared libraries, all external references must be resolved from static libraries
# -shared          create a shared library
# -export-dynamic  add all symbols to dynamic symbol table, needed for dlopen
# -avoid-version   ??
# -version-info
_ddc_swig_la_LDFLAGS    = -avoid-version -module -shared -export-dynamic -static


#
# Run swig
#

# This line assumes that the swig interface file ddct_public.i is located in the src subdirectory
# ddct_public_wrap.c: $(top_srcdir)/src/ddct_public.i
#
#       $(SWIG) -I${top_srcdir}/include -includeall -o ddct_public_wrap.c -python ${top_srcdir}/src/ddct_public.i
      
      
# hack, how to look up compile include directory? 
# swig/ddct_public_wrap.c: swig/ddct_public.i 
# 	$(swig_var)   -I${top_srcdir} -I/usr/lib/gcc/x86_64-linux-gnu/5/include -I/usr/include -includeall -o swig/ddct_public_wrap.c -python swig/ddct_public.i
	                     
swig/ddc_swig_wrap.c: swig/ddc_swig.i swig/ddc_swig.c swig/ddc_swig.h
	@echo "Target ddc_swig_wrap.c"
	@echo "  AM_CFLAGS          = $(AM_CFLAGS)"
	@echo "  AM_CPPFLAGS        = $(AM_CPPFLAGS)"
	@echo "  PYTHON_CFLAGS      = $(PYTHON_CFLAGS)"
	@echo "  PYTHON_CPPFLAGS    = $(PYTHON_CPPFLAGS)"
	@echo "  SWIG               = $(SWIG) "
	@echo "  top_srcdir         = $(top_srcdir)"
	@echo "  PYTHON_EXEC_PREFIX = $(PYTHON_EXEC_PREFIX)"
	@echo "  pythondir          = $(pythondir)"
	@echo "  pyexecdir          = $(pyexecdir)"
	@echo "  PYTHON_SITE_PKG    = $(PYTHON_SITE_PKG)"
	@echo "  PYTHON_LIBS        = $(PYTHON_LIBS)"
	@echo "  PYTHON_EXTRA_LDFLAGS = $(PYTHON_EXTRA_LDFLAGS)"
	@echo "  PYTHON_EXTRA_LIBS  = $(PYTHON_EXTRA_LIBS)"
	@echo "  PYTHON_LDFLAGS     = $(PYTHON_LDFLAGS)"
	@echo "  PYTHON_SITE_PKG_EXEC = $(PYTHON_SITE_PKG_EXEC)"
	@echo "  AX_SWIG_PYTHON_CPPFLAGS = $(AX_SWIG_PYTHON_CPPFLAGS)"
	@echo "  AX_SWIG_PYTHON_OPT      = $(AX_SWIG_PYTHON_OPT)"
	@echo "  SWIG_LIB                = $(SWIG_LIB)"
	@echo "  AX_SWIG_PYTHON_LIBS     = $(AX_SWIG_PYTHON_LIBS)"
	@echo "  prefix                  = $(prefix)"
	@echo "  includedir              = $(includedir)"
	@echo "  top_srcdir              = $(top_srcdir)"
	@echo "  srcdir                  = $(srcdir)"
	@echo "# swig_incs=-I/usr/lib/gcc/x86_64-linux-gnu/5/include -I/usr/include "
	$(SWIG)   -I${top_srcdir}  -includeall -o swig/ddc_swig_wrap.c -python swig/ddc_swig.i
			     
			                     

# Python extension python file, nodist because this file will be generated by swig
# pyexec so that file installed in same site-packages exec directory as the extension module
pyexec_PYTHON = ddc_swig.py

ddc_swig.py: swig/ddc_swig_wrap.c

endif

